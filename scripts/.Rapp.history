log2(1)
library(genoppi)
x <- read.table('~/Downloads/temp.txt',header=F)
x
x$V1
subset(get_inweb_list('JCAD'),significant)$gene
get_inweb_list('JCAD')
get_inweb_list('KIAA1462')
subset(get_inweb_list('KIAA1462'),significant)$gene
inweb <- subset(get_inweb_list('KIAA1462'),significant)$gene
intersect(x$V1,inweb)
bioplex <- subset(get_bioplex_list('KIAA1462'),significant)$gene
bioplex
irefindex <- subset(get_irefindex_list('KIAA1462'),significant)$gene
get_irefindex_list('JcAD')
get_irefindex_list('JCAD')
irefindex <- subset(get_irefindex_list('JCAD'),significant)$gene
irefindex
intersect(x$V1,inweb)
intersect(x$V1,bioplex)
intersect(x$V1,irefindex)
install.packages('seqLogo')
install.packages('ggseqlogo')
library(ggseqlogo)
data(ggseqlogo_sample)
seq_sdna
seqs_dna
pfms_dna
pwm <- read.table('~/Downloads/M07550_2.00.txt',header=T,sep='\t',row.names=1)
pwm
t(pwm)
pwm <- t(pwm)
ggseqlogo(pwm)
ggseqlogo(pwm,method='prob')
ggseqlogo(pwm)
pdf('CTCF_logo.pdf',height=2,width=4)
ggseqlogo(pwm)
dev.off()
pdf('CTCF_logo.pdf',height=2,width=5)
ggseqlogo(pwm)
dev.off()
2134162/7531314
2001942/7531314
1641573	/6684605
4089777	/6684605
2913508			/6002291
2690827			/6002291
262457			/11473783
105499			/7988961
0.05/28
setwd('~/Google Drive/My Drive/LageLab/GitHub/SCZ_PPI/scripts')
source('SCZ_plotNetwork.r',echo=T)
e <- get.edgelist(intNetwork,names=F)#
l <- qgraph.layout.fruchtermanreingold(e,vcount=vcount(intNetwork),niter=5000,seed=999,#
	area=(vcount(intNetwork)^1.7),repulse.rad=(vcount(intNetwork)^2.3))
source('SCZ_plotNetwork.r',echo=T)
packageVersion(qgraph)
packageVer(qgraph)
packageVersion('qgraph)
packageVersion('qgraph')
install.packages('qgraph')
packageVersion('qgraph')
source('SCZ_plotNetwork.r',echo=T)
rm(list=ls())#
#setwd("~/Google Drive/LageLab/BINe_IPs")#
setwd("~/Google Drive/My Drive/LageLab/BINe_IPs")#
#
library(igraph)#
library(qgraph)#
#library(hash)#
library(ggplot2)#
library(RColorBrewer)#
#
# InWeb interactors#
#load("~/Google Drive/LageLab/GitHub/Genoppi/data/InWeb_combined_Oct2018.RData")#
library(genoppi) # > v0.5.5 (new inweb_table)#
#
# interactor table#
allTable <- read.table('200616_SCZ_MasterInteractorTable.txt',header=T,sep='\t',stringsAsFactors=F)#
#
allTable$IsCombined <- sapply(strsplit(allTable$ListName,"_"),"[[",2)=='combined'#
allTable <- subset(allTable, !IsCombined & IsInteractor)#
#
allTable$Bait <- sapply(strsplit(allTable$ListName,"_"),"[[",1)#
dim(allTable) # 3431 bait-gene pairs (SYNGAP1 shows up as interactors in HCN1_wk2 and HCN1_wk7_1)#
# ----------------------------------------------------------------------------------------#
# frequency of interactors across 6 baits and across 19 IPs#
# annotate interactors in PGC3 loci and interactors prioritzed by FINEMAP/SMR#
#
# PGC3 genes in LD loci (medRxiv manuscript Supp Table 3)#
# 270 regions from combined meta-analysis (r2 > 0.1 SNPs +- 50kb)#
pgcDf <- read.table('PGC3_SCZ_combined_270loci_GenePosPvalue.txt',header=T,sep='\t',stringsAsFactors=F)#
#
# remove MHC region genes (except SYNGAP1)#
pgcDf <- subset(pgcDf,SNP!='rs13195636' | Gene=='SYNGAP1')#
#
# PGC3 FINEMAP/SMR (eQTL co-localization) genes (medRxiv manuscript Supp Table 20)#
# only keep protein-coding genes included in PGC3 loci above#
fineDf <- read.table('PGC3_SCZ_PrioritizedGenes.txt',header=T,sep='\t',stringsAsFactors=F)#
fineGenes <- subset(fineDf,Symbol.ID %in% pgcDf$Gene)$Symbol.ID#
#
intTable <- unique(allTable[,c('Bait','GeneName')])#
geneFreqTable <- NULL#
for (gene in unique(allTable$GeneName)) {#
	isBait <- intTable$GeneName==gene#
	isIP <- allTable$GeneName==gene#
	isPgc <- gene %in% pgcDf$Gene#
	isFine <- gene %in% fineGenes#
	geneFreqTable <- rbind(geneFreqTable,#
		data.frame(Interactor=gene,NumBaits=sum(isBait),NumIPs=sum(isIP),#
		PGC3=isPgc,FINEMAP_SMR=isFine,#
		Baits=paste(intTable$Bait[isBait],collapse=","),#
		IPs=paste(allTable$ListName[isIP],collapse=",")))#
}#
#
# order by decreasing frequency, then by alphabetical#
geneFreqTable <- geneFreqTable[order(-geneFreqTable$NumBaits,-geneFreqTable$NumIPs,#
	as.character(geneFreqTable$Interactor)),]
uniqBaits <- unique(intTable$Bait)#
inwebDf <- NULL#
for (bait in uniqBaits) {#
	tempDf <- genoppi::get_inweb_list(bait)#
	if (!is.null(tempDf)) { # if bait in InWeb#
		inwebInts <- subset(tempDf,significant==T)$gene#
		inwebDf <- rbind(inwebDf,data.frame(Bait=bait,gene=inwebInts))#
	}#
}#
#
# interactor counts#
table(intTable$Bait)#
#CACNA1C    CUL3    HCN1   RIMS1 SYNGAP1    TCF4 #
#    636      62     673     245     375      26#
table(inwebDf$Bait)#
#CACNA1C    CUL3    HCN1   RIMS1 SYNGAP1    TCF4 #
#     65    1266       8     102      36     270 #
#
# output InWeb-based network#
tempDf$significant <- tempDf$gene %in% inwebDf$gene#
names(tempDf) <- c("GeneName","IsInteractor")#
tempDf$ListName <- 'inweb_combined'#
tempDf <- tempDf[order(-tempDf$IsInteractor,tempDf$GeneName),#
	c("ListName","GeneName","IsInteractor")]
# inInWeb boolean vector (for each edge)#
intTable$inInWeb <- NA#
#inInWeb <- c()#
for (i in 1:nrow(intTable)) {#
	#inInWeb <- c(inInWeb, intTable$GeneName[i] %in% inwebDf$gene[inwebDf$Bait==intTable$Bait[i]])#
	intTable$inInWeb[i] <- intTable$GeneName[i] %in% inwebDf$gene[inwebDf$Bait==intTable$Bait[i]]#
	#inInWeb <- c(inInWeb, intTable$GeneName[i] %in% inweb_hash[[intTable$Bait[i]]])#
}#
#intTable$inInWeb <- inInWeb#
#
# create network (order columns and rows in intTable to plot bait nodes and InWeb edges last/on top)#
intTable <- intTable[order(intTable$inInWeb),]#
intNetwork <- graph_from_data_frame(intTable[,c('GeneName','Bait')], directed=F)#
# set vertex attributes (for node color, size, label)#
V(intNetwork)$isBait <- V(intNetwork)$name %in% unique(intTable$Bait)#
#
maxNumBaits <- max(table(intTable$GeneName))#
nodeColors <- brewer.pal(maxNumBaits+1,"Purples")[2:(maxNumBaits+1)]#
#
V(intNetwork)$size <- NA#
V(intNetwork)$color <- NA#
for (x in V(intNetwork)$name) {#
	if (x %in% unique(intTable$Bait)) {#
		V(intNetwork)$size[V(intNetwork)$name==x] <- maxNumBaits#
		V(intNetwork)$color[V(intNetwork)$name==x] <- "red"#
	} else {#
		V(intNetwork)$size[V(intNetwork)$name==x] <- sum(intTable$GeneName==x)#
		V(intNetwork)$color[V(intNetwork)$name==x] <- nodeColors[sum(intTable$GeneName==x)]#
	}#
}#
#
V(intNetwork)$label <- NA#
V(intNetwork)$label[V(intNetwork)$size>=2] <- V(intNetwork)$name[V(intNetwork)$size>=2]#
# set edge attributes (for edge color)#
E(intNetwork)$inInWeb <- intTable$inInWeb#
# network plot layout#
e <- get.edgelist(intNetwork,names=F)#
l <- qgraph.layout.fruchtermanreingold(e,vcount=vcount(intNetwork),niter=5000,#
	area=(vcount(intNetwork)^1.7),repulse.rad=(vcount(intNetwork)^2.3))#
	#area=(vcount(intNetwork)^1.7),repulse.rad=(vcount(intNetwork)^2.2))#
	#area=(vcount(intNetwork)^2*6),repulse.rad=(vcount(intNetwork)^3))
pdf('test.pdf',width=7,height=7)#
plot(intNetwork, edge.width=0.5,#
	vertex.color=V(intNetwork)$color,#
	vertex.size=V(intNetwork)$size+1, vertex.frame.color="grey30",#
	vertex.label=V(intNetwork)$label, vertex.label.color="black",#
	vertex.label.cex=0.08,#
	edge.color=c("grey","blue")[1+(E(intNetwork)$inInWeb)],#
	layout=l)#
#
plot(intNetwork, edge.width=0.5,#
	vertex.color=V(intNetwork)$color,#
	vertex.size=V(intNetwork)$size+1, vertex.frame.color="grey30",#
	vertex.label=NA, vertex.label.cex=0.08,#
	edge.color=c("grey","blue")[1+(E(intNetwork)$inInWeb)],#
	layout=l)#
#
dev.off()
dim(intTable)
x <- intTable
setwd('~/Google Drive/My Drive/LageLab/GitHub/SCZ_PPI/scripts')
allTable <- read.table('../data/SCZ_MasterInteractorTable_full.txt',#
	header=T,sep='\t',stringsAsFactors=F)#
#
allTable$IsCombined <- sapply(strsplit(allTable$ListName,"_"),"[[",2)=='combined'#
allTable <- subset(allTable, !IsCombined & IsInteractor)#
#
allTable$Bait <- sapply(strsplit(allTable$ListName,"_"),"[[",1)#
dim(allTable)#
#
# unique bait-interactor pairs to plot in network#
intTable <- unique(allTable[,c('Bait','GeneName')])#
dim(intTable)#
#
# interactor counts#
table(intTable$Bait)
head(intTable)
# InWeb interactors of each bait#
uniqBaits <- unique(intTable$Bait)#
inwebDf <- NULL#
for (bait in uniqBaits) {#
	tempDf <- genoppi::get_inweb_list(bait)#
	if (!is.null(tempDf)) { # if bait in InWeb#
		inwebInts <- subset(tempDf,significant==T)$gene#
		inwebDf <- rbind(inwebDf,data.frame(Bait=bait,gene=inwebInts))#
	}#
}#
#
# InWeb inetractor counts#
table(inwebDf$Bait)#
# inInWeb boolean vector (for annotating network edge)#
intTable$inInWeb <- NA#
for (i in 1:nrow(intTable)) {#
	intTable$inInWeb[i] <- intTable$GeneName[i] %in% #
		inwebDf$gene[inwebDf$Bait==intTable$Bait[i]]#
}#
# order columns and rows in intTable to plot bait nodes and InWeb edges last/on top#
intTable <- intTable[order(intTable$inInWeb),]#
# create network#
intNetwork <- graph_from_data_frame(intTable[,c('GeneName','Bait')], directed=F)#
# set vertex attributes (for node color, size, label)#
V(intNetwork)$isBait <- V(intNetwork)$name %in% unique(intTable$Bait)#
#
maxNumBaits <- max(table(intTable$GeneName))#
nodeColors <- brewer.pal(maxNumBaits+1,"Purples")[2:(maxNumBaits+1)]#
#
V(intNetwork)$size <- NA#
V(intNetwork)$color <- NA#
for (x in V(intNetwork)$name) {#
	if (x %in% unique(intTable$Bait)) {#
		V(intNetwork)$size[V(intNetwork)$name==x] <- maxNumBaits#
		V(intNetwork)$color[V(intNetwork)$name==x] <- "red"#
	} else {#
		V(intNetwork)$size[V(intNetwork)$name==x] <- sum(intTable$GeneName==x)#
		V(intNetwork)$color[V(intNetwork)$name==x] <-#
			nodeColors[sum(intTable$GeneName==x)]#
	}#
}#
#
V(intNetwork)$label <- NA#
V(intNetwork)$label[V(intNetwork)$size>=2] <- V(intNetwork)$name[V(intNetwork)$size>=2]#
# set edge attributes (for edge color)#
E(intNetwork)$inInWeb <- intTable$inInWeb#
# network plot layout#
e <- get.edgelist(intNetwork,names=F)#
l <- qgraph.layout.fruchtermanreingold(e,vcount=vcount(intNetwork),niter=5000,#
	area=(vcount(intNetwork)^1.7),repulse.rad=(vcount(intNetwork)^2.3))
dim(intTable)
intTable==x
head(intTable)
head(x)
x
source('200626_SCZ_generateNetworkPlot.r',echo=T)
source('SCZ_plotNetwork.r',echo=T)
source('SCZ_RareVariantAnalysis.r',echo=T)
source('SCZ_BrainSpanAnalysis.r',echo=T)
source('SCZ_pLiAnalysis.r',echo=T)
source('SCZ_plotSocialManhattan.r',echo=T)
warnings()
